{"ast":null,"code":"var _jsxFileName = \"/Users/tracynle/Bootcamp/react_project/client/src/components/SearchBar/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InputBase from '@material-ui/core/InputBase';\nimport { withStyles } from '@material-ui/core/styles'; // To do: set the InputBase to accept values to be able to search for items by giving an attribute: onChange that thakes a function\n// doSomethingWithSearchTerms\n// Add onkey enter function yourself, bc Material UI doesn't have documentation\n// check: https://reactjs.org/docs/events.html#keyboard-events\n\nconst styles = theme => ({\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  }\n});\n\nclass SearchBar extends React.Component {\n  doSomethingWithSearchTerms(event) {\n    console.log(event.target.value);\n    console.log(event.keyCode); // condition for enter key\n\n    if (event.keyCode === 13) {\n      // Call the API to do the search\n      console.log(\"Enter was pressed!!\");\n    }\n  } // \n\n\n  render() {\n    return React.createElement(InputBase, {\n      placeholder: \"Search\\u2026\",\n      classes: {\n        root: this.props.classes.inputRoot,\n        input: this.props.classes.inputInput\n      },\n      onKeyDown: this.doSomethingWithSearchTerms,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n  }\n\n}\n\nSearchBar.propTypes = {\n  classes: PropTypes.object.isRequired // Will show what user is typing in console\n\n};\nexport default withStyles(styles)(SearchBar);","map":{"version":3,"sources":["/Users/tracynle/Bootcamp/react_project/client/src/components/SearchBar/index.js"],"names":["React","PropTypes","InputBase","withStyles","styles","theme","inputRoot","color","width","inputInput","paddingTop","spacing","unit","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","breakpoints","up","SearchBar","Component","doSomethingWithSearchTerms","event","console","log","target","value","keyCode","render","root","props","classes","input","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CAEA;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,SADE;AAETC,IAAAA,KAAK,EAAE;AAFE,GADU;AAKrBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,UAAU,EAAEL,KAAK,CAACM,OAAN,CAAcC,IADhB;AAEVC,IAAAA,YAAY,EAAER,KAAK,CAACM,OAAN,CAAcC,IAFlB;AAGVE,IAAAA,aAAa,EAAET,KAAK,CAACM,OAAN,CAAcC,IAHnB;AAIVG,IAAAA,WAAW,EAAEV,KAAK,CAACM,OAAN,CAAcC,IAAd,GAAqB,EAJxB;AAKVI,IAAAA,UAAU,EAAEX,KAAK,CAACY,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,CALF;AAMVV,IAAAA,KAAK,EAAE,MANG;AAOV,KAACH,KAAK,CAACc,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BZ,MAAAA,KAAK,EAAE,GADqB;AAE5B,iBAAW;AACTA,QAAAA,KAAK,EAAE;AADE;AAFiB;AAPpB;AALS,CAAL,CAApB;;AAqBA,MAAMa,SAAN,SAAwBrB,KAAK,CAACsB,SAA9B,CAAwC;AAMpCC,EAAAA,0BAA0B,CAACC,KAAD,EAAQ;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACK,OAAlB,EAFgC,CAGhC;;AACA,QAAGL,KAAK,CAACK,OAAN,KAAkB,EAArB,EAAyB;AACrB;AACFJ,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAED;AACF,GAfmC,CAiBpC;;;AACAI,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,SAAD;AACI,MAAA,WAAW,EAAC,cADhB;AAEI,MAAA,OAAO,EAAE;AACLC,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,OAAX,CAAmB3B,SADpB;AAEL4B,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,OAAX,CAAmBxB;AAFrB,OAFb;AAMI,MAAA,SAAS,EAAK,KAAKc,0BANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUH;;AA7BmC;;AAAlCF,S,CACKc,S,GAAY;AACfF,EAAAA,OAAO,EAAEhC,SAAS,CAACmC,MAAV,CAAiBC,UADX,CAIpB;;AAJoB,C;AAgCvB,eAAelC,UAAU,CAACC,MAAD,CAAV,CAAmBiB,SAAnB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport InputBase from '@material-ui/core/InputBase';\nimport { withStyles } from '@material-ui/core/styles';\n\n// To do: set the InputBase to accept values to be able to search for items by giving an attribute: onChange that thakes a function\n// doSomethingWithSearchTerms\n// Add onkey enter function yourself, bc Material UI doesn't have documentation\n// check: https://reactjs.org/docs/events.html#keyboard-events\n\nconst styles = theme => ({\n    inputRoot: {\n      color: 'inherit',\n      width: '100%',\n    },\n    inputInput: {\n      paddingTop: theme.spacing.unit,\n      paddingRight: theme.spacing.unit,\n      paddingBottom: theme.spacing.unit,\n      paddingLeft: theme.spacing.unit * 10,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        width: 120,\n        '&:focus': {\n          width: 200,\n        },\n      },\n    },\n  });\n  \nclass SearchBar extends React.Component {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n    }\n\n   // Will show what user is typing in console\n    doSomethingWithSearchTerms(event) {\n      console.log(event.target.value);\n      console.log(event.keyCode);\n      // condition for enter key\n      if(event.keyCode === 13) {\n          // Call the API to do the search\n        console.log(\"Enter was pressed!!\");\n\n      }\n    }\n    \n    // \n    render() {\n        return (\n            <InputBase \n                placeholder=\"Searchâ€¦\"\n                classes={{\n                    root: this.props.classes.inputRoot,\n                    input: this.props.classes.inputInput,\n                }}\n                onKeyDown = { this.doSomethingWithSearchTerms }\n            />\n        )\n    }\n\n}\n\nexport default withStyles(styles)(SearchBar);"]},"metadata":{},"sourceType":"module"}