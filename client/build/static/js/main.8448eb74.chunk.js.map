{"version":3,"sources":["components/SearchBar/index.js","components/NavBar/index.js","pages/Home.js","pages/User.js","pages/Friends.js","pages/Likes.js","pages/Results.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","event","_this","this","keyCode","console","log","target","value","axios","get","params","item","then","response","props","history","push","pathname","state","items","data","results","catch","error","_this2","react_default","a","createElement","InputBase_default","placeholder","classes","root","inputRoot","input","inputInput","onKeyUp","e","doSomethingWithSearchTerms","React","Component","withStyles","theme","color","width","Object","defineProperty","paddingTop","spacing","unit","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","breakpoints","up","&:focus","grow","flexGrow","menuButton","marginLeft","marginRight","title","display","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","searchIcon","height","pointerEvents","alignItems","justifyContent","className","AppBar_default","Toolbar_default","IconButton_default","aria-label","Menu_default","Typography_default","variant","noWrap","Search_default","components_SearchBar","assign","Home","components_NavBar","User","Friends","Likes","Results","location","map","price","App","react_router_dom","react_router","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8448eb74.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport InputBase from '@material-ui/core/InputBase';\nimport { withStyles } from '@material-ui/core/styles';\nimport axios from \"axios\";\n\n\nconst styles = theme => ({\n    inputRoot: {\n      color: 'inherit',\n      width: '100%',\n    },\n    inputInput: {\n      paddingTop: theme.spacing.unit,\n      paddingRight: theme.spacing.unit,\n      paddingBottom: theme.spacing.unit,\n      paddingLeft: theme.spacing.unit * 10,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        width: 120,\n        '&:focus': {\n          width: 200,\n        },\n      },\n    },\n  });\n  \nclass SearchBar extends React.Component {\n    // state = {\n    //   results: []\n    // }\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n    }\n\n   // Will show what user is typing in console\n    doSomethingWithSearchTerms(event) {\n      // condition for enter key\n      if(event.keyCode === 13) {\n        console.log(event.target.value);\n        console.log(\"Enter was pressed!!\");\n        // Call the API to do the search to the server\n        axios.get('/api/search/', {\n          params: {\n            item: event.target.value\n          }\n        })\n        .then(response => {\n          // Redirect to results page to render etsy's results\n          // Will be redirected to a new page and it will be pushed into the browser's history\n          // the state contains the response and it is grabing the data that we need\n          console.log(this.props);\n          this.props.history.push({\n            pathname:\"/results\",\n            state:{\n              items: response.data.results\n             }\n           });\n          // this.setState({results: response.data.results})\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n        \n      }\n    }\n    \n    // search bar component\n    render() {\n      return (\n        <div>\n          <InputBase \n            placeholder=\"Searchâ€¦\"\n            classes={{\n                root: this.props.classes.inputRoot,\n                input: this.props.classes.inputInput,\n            }}\n            onKeyUp = { e => {this.doSomethingWithSearchTerms(e)} }\n          />\n        </div>\n      )\n    }\n  \n\n\n}\n\nexport default withStyles(styles)(SearchBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SearchBar from '../SearchBar';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  }\n});\n// create searchBar component and include this function\n\n// onChange={doSomethingWithSearchTerms}\n// function doSomethingWithSearchTerms(event) {\n//   console.log(event.target.value);\n// }\n\n// Renamed file to NavBar so it won't be confused with Material UI's Appbar. \n// Navbar component will handle the search bar onChange to see what you are typing\n// To do: create searchBar component file and include it in NavBar function- DONE \n\n\nfunction NavBar(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Open drawer\">\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n            Wish List\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <SearchBar className=\"\" {...props}></SearchBar>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nNavBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(NavBar);","// ==== NEEDS IMPORT FROM REACT OR PAGE BREAK =====\nimport React, { Component } from \"react\"; // imports the component \"Component\" from react's \"Component.js\" file\n\nimport NavBar from '../components/NavBar';\n// ===== BELOW IMPORTS OTHER COMPONENTS USED IN PAGE =====\n\n\n// ===== HOLDS STATE, FUNCTIONS FOR PAGE, AND RENDER FUNCTION =====\nclass Home extends Component {\n    // === STATE ===\n    state = {\n        // === example === \n        //propertyName1: String,\n        //property2: Boolean,\n        //property3: Number,\n        //property4: [Array],\n        //property5: ?? Object ??\n\n    };\n    // === GENERAL FUNCTIONS ===\n\n    // === RENDER FUNCTION  === \n    render() {\n        return(\n            <div>\n            <NavBar {...this.props}></NavBar>\n                Home Route\n            </div>\n        );\n    }   \n}\n\n\n// ===== EXPORTS `About` PAGE RENDER FUNCTION =====\nexport default Home;","// ==== NEEDS IMPORT FROM REACT OR PAGE BREAK =====\nimport React, { Component } from \"react\";\n// ===== BELOW IMPORTS OTHER COMPONENTS USED IN PAGE =====\n\n\n// ===== HOLDS STATE, FUNCTIONS FOR PAGE, AND RENDER FUNCTION =====\nclass User extends Component {\n    // === STATE ===\n\n    // === GENERAL FUNCTIONS ===\n\n    // === RENDER FUNCTION === \n    render() {\n        return(\n            <div>\n                User Route\n            </div>\n        );\n    }\n}\n\n// ===== EXPORTS `User` PAGE RENDER FUNCTION =====\nexport default User;","// ==== NEEDS IMPORT FROM REACT OR PAGE BREAK =====\nimport React, { Component } from \"react\";\n// ===== BELOW IMPORTS OTHER COMPONENTS USED IN PAGE =====\n\n\n// ===== HOLDS STATE, FUNCTIONS FOR PAGE, AND RENDER FUNCTION =====\nclass Friends extends Component {\n    // === STATE ===\n    \n    // === GENERAL FUNCTIONS ===\n\n    // === RENDER FUNCTION === \n    render() {\n        return(\n            <div>\n                Friends Route\n            </div>\n        );\n    }\n}\n\n\n// ===== EXPORTS `Friends` PAGE RENDER FUNCTION =====\nexport default Friends;","// ==== NEEDS IMPORT FROM REACT OR PAGE BREAK =====\nimport React from \"react\";\n// ===== BELOW IMPORTS OTHER COMPONENTS USED IN PAGE =====\n\n\n// ===== RENDERS ONE DIV THAT RENDERS ALL PAGE COMPONENTS =====\nfunction Likes() {\n    return(\n        <div>\n            Likes Route\n        </div>\n    );\n}\n\n// ===== EXPORTS `FriendList` PAGE RENDER FUNCTION =====\nexport default Likes;","// ==== NEEDS IMPORT FROM REACT OR PAGE BREAK =====\nimport React, { Component } from \"react\";\n\nimport NavBar from '../components/NavBar';\n// ===== BELOW IMPORTS OTHER COMPONENTS USED IN PAGE =====\n\n\n// ===== HOLDS STATE, FUNCTIONS FOR PAGE, AND RENDER FUNCTION =====\nclass Results extends Component {\n    state = {\n        items: []\n    }\n    \n\n    // === RENDER FUNCTION === \n    // \n    render() {\n        return(\n            <div>\n            <NavBar></NavBar>\n                {this.props.location.state.items.map(item => { \n                    return (\n                        <div>\n                            \n                            {item.title}\n                            {item.price}\n\n                        </div>\n                        \n                    )\n\n                })}\n             \n            </div>\n        );\n    }\n}\n\n// ===== EXPORTS `Results` PAGE RENDER FUNCTION =====\nexport default Results;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Home from './pages/Home';\nimport User from './pages/User';\nimport Friends from './pages/Friends';\nimport Likes from './pages/Likes';\n// import NavBar from './components/NavBar';\nimport Results from './pages/Results';\n\nclass App extends React.Component {\n  render() {\n    return  (\n      <div>\n      <Router>\n      <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/User\" component={User} />\n            <Route exact path=\"/Friends\" component={Friends} />\n            <Route exact path=\"/Likes\" component={Likes} />\n            <Route exact path=\"/results\" component={Results} />\n            </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Entry point to your react page\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}